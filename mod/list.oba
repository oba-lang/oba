// List is an ordered sequence of values.
// * Empty creates an empty list
// * Cons creates a list by adding x to the list, xs.
data List = Empty | Cons x xs

// Append adds an item to the end of a list.
fn append x xs {
  let os = Cons(x, Empty())
  let rs = reverse(xs)
  while rs != Empty() {
    os = Cons(head(rs), os)
    rs = tail(rs)
  }
  return os
}

// Length returns the length of a list.
fn length xs  = _length(xs, 0)
fn _length xs len {
  if xs == Empty() return len
  return _length(tail(xs), len + 1)
}

// Where returns the items of xs for which `f(x)` returns true.
fn where f xs {
 if xs == Empty() return xs

 let x = head(xs)
 xs = tail(xs)

 if f(x) return Cons(x, where(f, xs))
 return where(f, xs)
}

// Head returns the first item in xs.
//
// Panics if xs is empty.
fn head xs = match xs
  | Empty    = panic("list is empty")
  | Cons x _ = x
  ;

// Tail returns all of the items after the first item in xs.
//
// If xs is empty or has length 1, the empty list is returned.
fn tail xs = match xs
  | Empty     = xs
  | Cons _ ys = ys
  ;

// Reverse reverses a list.
fn reverse xs {
  let rs = Empty()
  while xs != Empty() {
    rs = Cons(head(xs), rs)
    xs = tail(xs)
  }
  return rs
}

// Concat appends the list ys to the list xs.
fn concat xs ys  {
  xs = reverse(xs)
  while xs != Empty() {
    ys = Cons(head(xs), ys)
    xs = tail(xs) 
  }
  return ys
}

// Format formats xs as a string 'x1,x2,...,xN'.
fn format xs = _format(xs, "")
fn _format xs string {
  if xs == Empty() return string

  let x = head(xs)
  xs = tail(xs)

  if xs == Empty() return string + "%(x)"
  return _format(xs, string + "%(x),")
}

// Quicksort sorts a list using the quicksort algorithm.
fn quicksort xs {
  if length(xs) == 0 {
     return xs
  }

  let x = head(xs)
  let rest = tail(xs)

  fn lte v = v <= x
  fn gte v = v >= x

  let lesser = quicksort(where(lte, rest))
  let greater = quicksort(where(gte, rest))
  let middle = Cons(x, Empty())

  return concat(lesser, concat(middle, greater))
}

// Sort sorts a list.
fn sort xs = quicksort(xs)

